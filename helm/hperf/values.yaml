# Default values for hperf.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 6

image:
  repository: quay.io/minio/hperf
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: v5.0.5

imagePullSecrets: []

## Provide a name in place of minio for `app:` labels
##
nameOverride: ""

## Provide a name to substitute for the full names of resources
##
fullnameOverride: ""

## set kubernetes cluster domain where minio is running
##
clusterDomain: cluster.local

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

hperf:
  labels: {}
    # Port to run hperf server listening in 0.0.0.0:{{ port }}
  port: 9010

  # Type of volume to use. Supported types are emptyDir hostPath and persistentVolumeClaim
  # WARNING: Only one volume type can be specified at the time: volumeClaimTemplate, emptyDir, or hostPath
  hperfVolume:
    emptyDir:
      sizeLimit: 1Gi

#     HostPath configuration (used when type: hostPath)
#     hostPath:
#       path: /host/tmp/hperf
#       type: DirectoryOrCreate

    # When volumeType is persistentVolumeClaim
#    volumeClaimTemplate:
#      # The capacity for the volume
#      size: 100Mi
#      #storageClassName: standard
#      # Specify `storageAnnotations <https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/>`__
#      storageAnnotations: {}

# bandwidth will start hperf as a client in a Job to perform a benchmark of throughput
# 'hperf bandwidth' uses the chart name as test id by default
bandwidth:
  labels: {}
  # set a custom test id, default to chart name
  id: bandwidth-test
  # duration of the test in seconds
  duration: 30
  # number of concurrent clients
  concurrency: 10
  # print all data points
  printAll: true
  #Display timers in microseconds instead of milliseconds
  micro: false

# latency will start hperf as a client in a Job to perform a benchmark of latency
# 'hperf latency' uses the chart name as test id by default
latency:
  labels: {}
  # set a custom test id, default to chart name
  id: latency-test
  controls how long a test will run in seconds (default: 30)
  duration: 30
  # print all data points
  printAll: true
  #Display timers in microseconds instead of milliseconds
  micro: false
